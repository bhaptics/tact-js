/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function is_bhaptics_player_running(): number;
export function is_bhaptics_player_installed(): number;
export function run_bhaptics_player(a: number): number;
export function registry_and_initialize(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function remote_registry_and_initialize(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function retry_initialize(a: number, b: number, c: number, d: number): number;
export function is_connected(): number;
export function close(): number;
export function set_device_vsm(a: number, b: number, c: number): number;
export function swap_position(a: number, b: number): number;
export function is_bhaptics_device_connected(a: number): number;
export function ping(a: number, b: number): number;
export function ping_all(): number;
export function get_event_time(a: number, b: number): number;
export function get_device_info_json(): number;
export function get_haptic_mappings_json(): number;
export function is_playing_event(): number;
export function is_playing_event_by_request_id(a: number): number;
export function is_playing_event_by_event_id(a: number, b: number): number;
export function play_event(a: number, b: number, c: number): number;
export function play_with_start_time(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function play_without_result(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function play_param(a: number, b: number, c: number, d: number, e: number, f: number, g: number): number;
export function play_loop(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): number;
export function play_dot(a: number, b: number, c: number, d: number, e: number): number;
export function play_path(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number): number;
export function play_glove(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function pause(a: number, b: number): number;
export function resume(a: number, b: number): number;
export function stop_by_request_id(a: number): number;
export function stop_by_event_name(a: number, b: number): number;
export function stop_all(): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h39ffd099e3b9af6c(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h9de4dfc5842d2ae3(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h0616af040bff7ca8(a: number, b: number, c: number, d: number): void;
