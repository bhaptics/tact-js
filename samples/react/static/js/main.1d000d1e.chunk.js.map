{"version":3,"sources":["components/TabItem.js","utils.js","components/DotMode.js","components/TactFile.js","components/visualize/VisualizeListener.js","components/visualize/Visualize.js","components/TestLayout.js","components/PathMode.js","components/Footer.js","components/ConnectChecker.js","App.js","serviceWorker.js","index.js"],"names":["children","onClick","isSelected","className","Utils","clamps","value","min","max","Math","tactFiles","onChange","useEffect","tactJs","addListener","msg","message","Status","status","back","VestBack","front","VestFront","ForearmL","ForearmR","Head","setInterval","turnOff","style","display","useSpring","forearmL","forearmR","head","set","frontCircles","backCircles","leftCircles","rightCircles","headCircles","rowIndex","columnIndex","lCircle","interpolate","arr","push","rCircle","frontCircle","backCircle","headCircle","mappings","pos","circles","tosyMappings","useCallback","fr","bk","l","r","VisualizeListener","viewBox","map","circle","index","g","key","transform","fill","stroke","strokeWidth","item","menus","name","useState","tactFile","setSetFile","turnOffAll","setTimeout","registerFile","JSON","stringify","e","target","file","project","layout","submitRegistered","dotPoints","intensity","durationMillis","position","state","setState","tempPoint","setTempPoint","errorMessage","setErrorMessage","isNaN","find","d","point","filter","p","pIndex","submitDot","pathPoints","x","y","submitPath","tabIndex","setTabIndex","Visualize","menu","TabItem","setStatus","href","Fragment","App","maxWidth","ConnectChecker","TestLayout","Footer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1d000d1e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default ({children, onClick, isSelected = false}) => {\r\n  return (\r\n    <div className={`py-2 w-32 text-center px-4 rounded cursor-pointer ${isSelected ? 'bg-red-500': 'bg-gray-500'}`}\r\n         onClick={onClick}>\r\n      {children}\r\n    </div>);\r\n}","export default class Utils {\r\n  static clamps = function(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n  };\r\n}","import React, {useState} from \"react\";\r\nimport tactJs from 'tact-js';\r\nimport Utils from '../utils'\r\n\r\n\r\nexport default () => {\r\n  const [state, setState] = useState({\r\n    dotPoints: [{index: 0, intensity: 100}],\r\n    durationMillis: 1000,\r\n    position: 'VestFront',\r\n    key: 'dotMode',\r\n  });\r\n\r\n  const [tempPoint, setTempPoint] = useState({\r\n    index: 0, intensity: 100,\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {\r\n          !!errorMessage &&\r\n          <div className={'border p-2 border-red-500 text-red-500'}>\r\n            {errorMessage}\r\n          </div>\r\n        }\r\n        <div className={'my-2'}>\r\n          index:\r\n          <input className={'w-12  mx-2 border'} onChange={(e) => {\r\n            const value = Utils.clamps(e.target.value, 0, 19);\r\n\r\n            if (isNaN(value)) {\r\n              setErrorMessage('Invalid value (should be  [0~19])');\r\n              return;\r\n            }\r\n\r\n            setTempPoint({\r\n              ...tempPoint,\r\n              index: value,\r\n            })\r\n            setErrorMessage('');\r\n          }}\r\n                 value={tempPoint.index}/>\r\n                 intensity:\r\n          <input className={'w-12  mx-2 border'} onChange={(e) => {\r\n            const value = Utils.clamps(e.target.value, 0, 100);\r\n\r\n            if (isNaN(value)) {\r\n              setErrorMessage('Invalid value (should be  [0~100])');\r\n              return;\r\n            }\r\n\r\n            setTempPoint({\r\n              ...tempPoint,\r\n              intensity: value,\r\n            })\r\n            setErrorMessage('');\r\n          }}\r\n                 value={tempPoint.intensity}/>\r\n          <button className={'mx-2 bg-gray-500 p-2 w-8 rounded'}\r\n                  onClick={() => {\r\n                    let founded = state.dotPoints.find(d => d.index === tempPoint.index);\r\n                    if (!!founded) {\r\n                      setErrorMessage('Invalid value (already added with index ' + tempPoint.index);\r\n                      return;\r\n                    }\r\n\r\n\r\n                    setState({\r\n                      ...state,\r\n                      dotPoints: [...state.dotPoints, tempPoint],\r\n                    });\r\n                    setErrorMessage('')\r\n                  }}>+</button>\r\n        </div>\r\n\r\n\r\n        {\r\n          state.dotPoints.map((point, index) => {\r\n            return (\r\n              <div key={index}>\r\n                {\r\n                  `index: ${point.index}, intensity: ${point.intensity}`\r\n                }\r\n                <button className={'border rounded p-2 mx-4 bg-gray-500'}\r\n                        onClick={()=> {\r\n                          setState({\r\n                            ...state,\r\n                            dotPoints: state.dotPoints.filter((p, pIndex) => pIndex !== index)\r\n                          })\r\n                        }}>-</button>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n\r\n      </div>\r\n      <div className={'my-8'}>\r\n\r\n        <select className={'border p-2 mr-2'}\r\n                onChange={(e) => {\r\n                  setState({\r\n                    ...state,\r\n                    position: e.target.value,\r\n                  })\r\n                }}>\r\n          <option>VestFront</option>\r\n          <option>VestBack</option>\r\n          <option>Head</option>\r\n          <option>ForearmL</option>\r\n          <option>ForearmR</option>\r\n        </select>\r\n\r\n        <input className={'border w-24 mr-2 p-2'}\r\n               value={state.durationMillis}\r\n               onChange={e => {\r\n                const durationMillis = Utils.clamps(e.target.value, 0, 10000);\r\n                setState({\r\n                  ...state,\r\n                  durationMillis,\r\n                })\r\n               }}>\r\n        </input>\r\n        ms\r\n\r\n        <button className={'border rounded p-2 mx-4 bg-gray-500'}\r\n                onClick={() => {\r\n                  tactJs.submitDot(state.key, state.position, state.dotPoints, state.durationMillis);\r\n                }}>\r\n          Test\r\n        </button>\r\n\r\n        <button className={'border rounded p-2  bg-gray-500'}\r\n                onClick={() => {\r\n                  tactJs.turnOff(state.key);\r\n                }}>Turn Off</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport tactJs from 'tact-js';\r\nimport Block_L from '../tactFiles/ArmLeft/Block_L';\r\nimport Electric_L from '../tactFiles/ArmLeft/Electric_L';\r\nimport Pistol_L from '../tactFiles/ArmLeft/Pistol_L';\r\n\r\nimport Block_R from '../tactFiles/ArmRight/Block_R';\r\nimport Electric_R from '../tactFiles/ArmRight/Electric_R';\r\nimport Pistol_R from '../tactFiles/ArmRight/Pistol_R';\r\n\r\nimport Explosion from '../tactFiles/Vest/Explosion';\r\nimport Melee1 from '../tactFiles/Vest/Melee1';\r\nimport Melee2 from '../tactFiles/Vest/Melee2';\r\nimport Heartbeat from '../tactFiles/Vest/Heartbeat';\r\nimport PistolHit from '../tactFiles/Vest/PistolHit';\r\n\r\nimport ExplosionHead from '../tactFiles/Head/ExplosionHead';\r\nimport HeatHead from '../tactFiles/Head/HeatHead';\r\n\r\nconst tactFiles = [\r\n  Block_L,\r\n  Electric_L,\r\n  Pistol_L,\r\n\r\n  Block_R,\r\n  Electric_R,\r\n  Pistol_R,\r\n\r\n  Explosion,\r\n  Melee1,\r\n  Melee2,\r\n  Heartbeat,\r\n  PistolHit,\r\n\r\n  ExplosionHead,\r\n  HeatHead,\r\n];\r\n\r\nexport default () => {\r\n  const [tactFile, setSetFile] = useState(0);\r\n\r\n  useEffect(() => {\r\n    tactJs.turnOffAll();\r\n    setTimeout(() => {\r\n\r\n      tactJs.registerFile(tactFile+'', JSON.stringify(tactFiles[tactFile]))\r\n    }, 100)\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        Tact Files\r\n      </div>\r\n\r\n      <select className={'border p-2'}\r\n              value={tactFile}\r\n              onChange={(e) => {\r\n                tactJs.registerFile(e.target.value, JSON.stringify(tactFiles[e.target.value]))\r\n                setSetFile(e.target.value);\r\n              }}>\r\n        {tactFiles.map((file, index) => {\r\n          return (\r\n            <option key={index} value={index}>\r\n              {\r\n                file.project.layout.name + ' - '\r\n              }\r\n\r\n              {\r\n                file.project.name\r\n              }\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n\r\n\r\n      <div className={'my-2'}>\r\n        <button onClick={() => {\r\n          tactJs.submitRegistered(tactFile)\r\n        }}\r\n                className={'border p-2 bg-gray-500 rounded w-20'}>Play</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, {useEffect} from \"react\";\r\nimport tactJs from \"tact-js\";\r\n\r\nexport default ({onChange}) => {\r\n  useEffect(() => {\r\n    tactJs.addListener((msg) => {\r\n      if (!msg.message.Status) {\r\n        return;\r\n      }\r\n\r\n      const status = msg.message.Status;\r\n\r\n      const back = status.VestBack;\r\n      const front = status.VestFront;\r\n      onChange(front, back,  status.ForearmL, status.ForearmR, status.Head);\r\n    });\r\n\r\n    setInterval(() => {\r\n      // this is for ping()\r\n      tactJs.turnOff('');\r\n    }, 4000);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{display: \"none\"}}></div>\r\n  );\r\n}","import React, {useCallback} from \"react\";\r\nimport { useSpring, animated as anim, interpolate } from 'react-spring'\r\nimport VisualizeListener from \"./VisualizeListener\";\r\n\r\nexport default () => {\r\n  const [{ front, back, forearmL, forearmR, head }, set] = useSpring(() => ({\r\n    front: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    back:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    forearmL:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    forearmR:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    head:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n  }));\r\n\r\n  const column = 4;\r\n  const row = 5;\r\n\r\n  const frontCircles = [];\r\n  const backCircles = [];\r\n  const leftCircles = [];\r\n  const rightCircles = [];\r\n  const headCircles = [];\r\n\r\n  for(let rowIndex = 0 ; rowIndex < 2 ; rowIndex++) {\r\n    for(let columnIndex = 0 ; columnIndex < 3 ; columnIndex++) {\r\n      const lCircle = interpolate([forearmL],\r\n        (arr) =>`translate(${40 * columnIndex + 40},${ 40 * rowIndex + 40 }) scale(${0.1 + 0.01 * arr[rowIndex * 3 + columnIndex]})`);\r\n      leftCircles.push(lCircle);\r\n      const rCircle = interpolate([forearmR],\r\n        (arr) =>`translate(${40 * columnIndex + 40},${ 40 * rowIndex + 40 }) scale(${0.1 + 0.01 * arr[rowIndex * 3 + columnIndex]})`);\r\n      rightCircles.push(rCircle);\r\n    }\r\n  }\r\n\r\n  for(let rowIndex = 0 ; rowIndex < row ; rowIndex++) {\r\n    for(let columnIndex = 0 ; columnIndex < column ; columnIndex++) {\r\n      const frontCircle = interpolate([front],\r\n        (arr) =>`translate(${50 * columnIndex + 20},${ 40 * rowIndex + 20 }) scale(${0.1 + 0.01 * arr[rowIndex * 4 + columnIndex]})`);\r\n      frontCircles.push(frontCircle);\r\n      const backCircle = interpolate([back],\r\n        (arr) =>`translate(${50 * columnIndex + 20},${ 40 * rowIndex + 20 }) scale(${0.1 + 0.01 * arr[rowIndex * 4 + columnIndex]})`);\r\n      backCircles.push(backCircle);\r\n    }\r\n  }\r\n\r\n  for(let columnIndex = 0 ; columnIndex < 6 ; columnIndex++) {\r\n    const headCircle = interpolate([head],\r\n      (arr) =>`translate(${30 * columnIndex + 20},${ 20  }) scale(${0.1 + 0.01 * arr[ columnIndex]})`);\r\n    headCircles.push(headCircle);\r\n  }\r\n\r\n\r\n  const mappings = [\r\n    {\r\n      pos: 'VestFront',\r\n      circles : frontCircles,\r\n    },\r\n    {\r\n      pos: `VestBack`,\r\n      circles : backCircles,\r\n    },\r\n  ];\r\n\r\n  const tosyMappings = [\r\n    {\r\n      pos: `ForearmL`,\r\n      circles : leftCircles,\r\n    },\r\n    {\r\n      pos: `ForearmR`,\r\n      circles : rightCircles,\r\n    },\r\n\r\n  ];\r\n  const onChange = useCallback((fr, bk, l, r, head) => {\r\n    set({front: fr, back: bk, forearmL: l, forearmR: r, head});\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <VisualizeListener onChange={onChange}/>\r\n      <div className={'flex flex-row flex-wrap justify-center'}>\r\n              <div className={'w-2/3'} >\r\n                <div>\r\n                  {'Head'}\r\n                </div>\r\n                <div className={'border rounded my-4  mx-2'}>\r\n                  <svg  viewBox=\"0 0 200 40\">\r\n                    {\r\n                      headCircles.map((circle, index) =>\r\n                        <anim.g  key={index} transform={circle}>\r\n                          <circle r=\"20\"\r\n                                  fill={'#3490fc'}\r\n                                  stroke=\"#ffffff\"\r\n                                  strokeWidth=\"5\"  />\r\n                        </anim.g>\r\n                      )\r\n                    }\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n      </div>\r\n      <div className={'flex flex-row flex-wrap'}>\r\n        {\r\n          mappings.map(item => {\r\n            return (\r\n              <div className={'w-1/2'} key={item.pos}>\r\n                <div>\r\n                  {item.pos}\r\n                </div>\r\n                <div className={'border rounded my-4  mx-2'}>\r\n                  <svg  viewBox=\"0 0 200 200\">\r\n                    {\r\n                      item.circles.map((circle, index) =>\r\n                        <anim.g  key={index} transform={circle}>\r\n                          <circle r=\"20\"\r\n                                  fill={'#3490fc'}\r\n                                  stroke=\"#ffffff\"\r\n                                  strokeWidth=\"5\"  />\r\n                        </anim.g>\r\n                      )\r\n                    }\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n      <div className={'flex flex-row flex-wrap'}>\r\n        {\r\n          tosyMappings.map(item => {\r\n            return (\r\n              <div className={'w-1/2'} key={item.pos}>\r\n                <div>\r\n                  {item.pos}\r\n                </div>\r\n                <div className={'border rounded my-4  mx-2'} >\r\n                  <svg  viewBox=\"0 10 160 100\">\r\n                    {\r\n                      item.circles.map((circle, index) =>\r\n                        <anim.g  key={index} transform={circle}>\r\n                          <circle r=\"20\"\r\n                                  fill={'#3490fc'}\r\n                                  stroke=\"#ffffff\"\r\n                                  strokeWidth=\"5\"  />\r\n                        </anim.g>\r\n                      )\r\n                    }\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport tactJs from 'tact-js';\r\nimport TabItem from \"./TabItem\";\r\nimport DotMode from \"./DotMode\";\r\nimport TactFile from \"./TactFile\";\r\nimport Visualize from \"./visualize/Visualize\";\r\nimport PathMode from \"./PathMode\";\r\n\r\n\r\nconst menus = [\r\n  {\r\n    name: 'File',\r\n    item: <TactFile/>\r\n  },\r\n  {\r\n    name: 'DotMode',\r\n    item: <DotMode/>\r\n  },\r\n  {\r\n    name: 'PathMode',\r\n    item: <PathMode/>\r\n  },\r\n];\r\n\r\nexport default () => {\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Just for initialization.\r\n    tactJs.turnOffAll();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={'text-xl'}>\r\n      <Visualize/>\r\n\r\n      <div className={'flex flex-row justify-around'}>\r\n\r\n        {\r\n          menus.map((menu, index) => {\r\n            return (\r\n              <TabItem key={index}\r\n                       isSelected={index ===tabIndex}\r\n                       onClick={() => {\r\n                         setTabIndex(index);\r\n                       }}>\r\n                {menu.name}\r\n              </TabItem>\r\n            );\r\n          })\r\n        }\r\n\r\n      </div>\r\n      <div className={'p-4 border'}>\r\n        {menus[tabIndex].item}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, {useState} from \"react\";\r\nimport Utils from \"../utils\";\r\nimport tactJs from \"tact-js\";\r\n\r\nexport default () => {\r\n  const [state, setState] = useState({\r\n    pathPoints: [{x: 0.5, y: 0.5, intensity: 100}],\r\n    durationMillis: 1000,\r\n    position: 'VestFront',\r\n    key: 'pathMode',\r\n  });\r\n\r\n  const [tempPoint, setTempPoint] = useState({\r\n    x: 0.5, y: 0.5, intensity: 100,\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n\r\n  return (\r\n    <div>\r\n      Path Mode\r\n\r\n\r\n      {\r\n        !!errorMessage &&\r\n        <div className={'border p-2 border-red-500 text-red-500'}>\r\n          {errorMessage}\r\n        </div>\r\n      }\r\n      <div className={'my-2'}>\r\n        x:\r\n        <input className={'w-12  mx-2 border'} onChange={(e) => {\r\n          const value = Utils.clamps(e.target.value, 0, 1);\r\n\r\n          if (isNaN(value)) {\r\n            setErrorMessage('Invalid value (should be  [0~1])');\r\n            return;\r\n          }\r\n\r\n          setTempPoint({\r\n            ...tempPoint,\r\n            x: value,\r\n          })\r\n          setErrorMessage('');\r\n        }}\r\n               value={tempPoint.x}/>\r\n        y:\r\n        <input className={'w-12  mx-2 border'} onChange={(e) => {\r\n          const value = Utils.clamps(e.target.value, 0, 1);\r\n\r\n          if (isNaN(value)) {\r\n            setErrorMessage('Invalid value (should be  [0~1])');\r\n            return;\r\n          }\r\n\r\n          setTempPoint({\r\n            ...tempPoint,\r\n            y: value,\r\n          })\r\n          setErrorMessage('');\r\n        }}\r\n               value={tempPoint.y}/>\r\n         intensity:\r\n        <input className={'w-12  mx-2 border'} onChange={(e) => {\r\n          const value = Utils.clamps(e.target.value, 0, 100);\r\n\r\n          if (isNaN(value)) {\r\n            setErrorMessage('Invalid value (should be  [0~100])');\r\n            return;\r\n          }\r\n\r\n          setTempPoint({\r\n            ...tempPoint,\r\n            intensity: value,\r\n          })\r\n          setErrorMessage('');\r\n        }}\r\n               value={tempPoint.intensity}/>\r\n        <button className={'mx-2 bg-gray-500 p-2 w-8 rounded'}\r\n                onClick={() => {\r\n\r\n                  setState({\r\n                    ...state,\r\n                    pathPoints: [...state.pathPoints, tempPoint],\r\n                  });\r\n                  setErrorMessage('')\r\n                }}>+</button>\r\n      </div>\r\n\r\n\r\n      {\r\n        state.pathPoints.map((point, index) => {\r\n          return (\r\n            <div key={index}>\r\n              {\r\n                `x: ${point.x}, y: ${point.y},  intensity: ${point.intensity}`\r\n              }\r\n              <button className={'border rounded p-2 mx-4 bg-gray-500'}\r\n                      onClick={()=> {\r\n                        setState({\r\n                          ...state,\r\n                          pathPoints: state.pathPoints.filter((p, pIndex) => pIndex !== index)\r\n                        })\r\n                      }}>-</button>\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n\r\n\r\n\r\n      <div className={'my-8'}>\r\n\r\n        <select className={'border p-2 mr-2'}\r\n                onChange={(e) => {\r\n                  setState({\r\n                    ...state,\r\n                    position: e.target.value,\r\n                  })\r\n                }}>\r\n          <option>VestFront</option>\r\n          <option>VestBack</option>\r\n          <option>Head</option>\r\n          <option>ForearmL</option>\r\n          <option>ForearmR</option>\r\n        </select>\r\n\r\n        <input className={'border w-24 mr-2 p-2'}\r\n               value={state.durationMillis}\r\n               onChange={e => {\r\n                 const durationMillis = Utils.clamps(e.target.value, 0, 10000);\r\n                 setState({\r\n                   ...state,\r\n                   durationMillis,\r\n                 })\r\n               }}>\r\n        </input>\r\n        ms\r\n\r\n        <button className={'border rounded p-2 mx-4 bg-gray-500'}\r\n                onClick={() => {\r\n                  tactJs.submitPath(state.key, state.position, state.pathPoints, state.durationMillis);\r\n                }}>\r\n          Test\r\n        </button>\r\n\r\n        <button className={'border rounded p-2  bg-gray-500'}\r\n                onClick={() => {\r\n                  tactJs.turnOff(state.key);\r\n                }}>Turn Off</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className={'text-center py-32'}>\r\n      <div>\r\n        <div>\r\n\r\n          developer@bhaptics.com\r\n        </div>\r\n        <div>\r\n          copyright © 2020 bHaptics Inc.\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport tactJs from \"tact-js\";\r\n\r\nexport default () => {\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    tactJs.addListener((msg) => {\r\n      if (status !== msg.status) {\r\n        setStatus(msg.status);\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <div className={'my-2'}>\r\n      <a href={'https://bhaptics.com/download'}>\r\n        {`bHaptics Player : `}\r\n      </a>\r\n      {\r\n        status === 'Connected' ?\r\n        <span className={'bg-green-500 p-2 rounded'}>\r\n          {status}\r\n        </span> :\r\n        <React.Fragment>\r\n          <span className={'bg-red-500 p-2 rounded'}>\r\n            {status}\r\n          </span>\r\n        </React.Fragment>\r\n      }\r\n\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport './tailwind.min.css';\nimport TestLayout from \"./components/TestLayout\";\nimport Footer from \"./components/Footer\";\nimport ConnectChecker from \"./components/ConnectChecker\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"mx-auto \" style={{maxWidth: 500}}>\n\n        <div className={'font-bold my-4 text-2xl'}>\n          bHaptics Inc.\n        </div>\n\n        <ConnectChecker/>\n\n        <TestLayout/>\n\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}