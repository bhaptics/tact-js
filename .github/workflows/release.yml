name: Release & Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # GitHub Release 생성을 위해 필요
      id-token: write # npm provenance를 위해 필요

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install

      - name: Verify version consistency
        run: |
          TAG_VERSION="${{ github.ref_name }}"
          PACKAGE_VERSION=$(cat sdk/package.json | grep '"version"' | sed 's/.*"version": *"\([^"]*\)".*/\1/')

          # v 접두사 제거
          TAG_VERSION_CLEAN=${TAG_VERSION#v}

          echo "Tag version: $TAG_VERSION_CLEAN"
          echo "Package version: $PACKAGE_VERSION"

          if [ "$TAG_VERSION_CLEAN" != "$PACKAGE_VERSION" ]; then
            echo "❌ Version mismatch: tag=$TAG_VERSION_CLEAN, package.json=$PACKAGE_VERSION"
            exit 1
          else
            echo "✅ Version consistency verified"
          fi

      - name: Build
        run: pnpm build

      - name: Publish to NPM
        run: pnpm --filter ./sdk publish --provenance --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ github.ref_name }}',
              name: 'Release ${{ github.ref_name }}',
              draft: false,
              prerelease: false
            })
